// import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";
// import axios from "axios";
// import { RootState } from "../store";

import { createSlice } from "@reduxjs/toolkit";

// interface IPDetailState {
//   isLoading: boolean;
//   ipDetail: {
//     ipAddress: string;
//     location: string;
//     latitude: number;
//     longitude: number;
//     ispProvider: string;
//     timeOffset: string;
//   };
// }

// const initialState: IPDetailState = {
//   isLoading: false,
//   ipDetail: {
//     ipAddress: "",
//     location: "",
//     latitude: 0,
//     longitude: 0,
//     ispProvider: "",
//     timeOffset: "",
//   },
// };

// //NOTE placing free API account fo reference when either of the two API keys are used up
// //https://ipgeolocation.abstractapi.com/v1/?api_key=82a273acbd334ca1b9a0a0d7d8cc5cc6&ip_address=${ipAddress}
// //https://ipgeolocation.abstractapi.com/v1/?api_key=de0fb72673f946cf92101236820fb553&ip_address=${ipAddress}
// export const fetchIPData = createAsyncThunk(
//   "ip-detail/fetchIPData", //take note of "ip-detail/fetchIPData" where ip-detail is the slice name and fetchIPData is the action name
//   async (ipAddress: string) => {
//     console.log(ipAddress);
//     return axios
//       .get(
//         `https://ipgeolocation.abstractapi.com/v1/?api_key=82a273acbd334ca1b9a0a0d7d8cc5cc6&ip_address=${ipAddress}`,
//       )
//       .then((response) => response.data);
//   },
// );

// export const IPDetailSlice = createSlice({
//   name: "ip-detail",
//   initialState,
//   reducers: {},
//   extraReducers: (builder) => {
//     builder
//       .addCase(fetchIPData.pending, (state) => {
//         //notice "fetchIPData", this was the action name used in createAsyncThunk "ip-detail/fetchIPData"
//         state.isLoading = true;
//       })
//       .addCase(fetchIPData.fulfilled, (state, action) => {
//         state.isLoading = false;
//         state.ipDetail.ipAddress = action.payload.ip_address;
//         state.ipDetail.location = `${action.payload.city}, ${action.payload.country}`;
//         state.ipDetail.latitude = action.payload.latitude;
//         state.ipDetail.longitude = action.payload.longitude;
//         state.ipDetail.ispProvider = action.payload.connection.isp_name;
//         state.ipDetail.timeOffset = action.payload.timezone.gmt_offset;
//       })
//       .addCase(fetchIPData.rejected, () => {
//         alert(
//           "Monthly API request for Api GEOLOCATION limit reached, Please try again next month.",
//         );
//       });
//   },
// });

// export const selectIPDetail = (state: RootState) => state.ipDetail; //state.ipDetail is from the store.ts

// export const selectPlanReducer = IPDetailSlice.reducer;

//NOTE The types for initial state where generated by Github AI cool!
type User = {
  image: {
    png: string;
    webp: string;
  };
  username: string;
};

type Reply = {
  id: number;
  content: string;
  createdAt: string;
  score: number;
  replyingTo: string;
  user: User;
};

type Comment = {
  id: number;
  content: string;
  createdAt: string;
  score: number;
  user: User;
  replies: Reply[];
};

type State = {
  currentUser: User;
  comments: Comment[];
};

//NOTE Simulate the API call
const initialState: State = {
  currentUser: {
    image: {
      png: "./images/avatars/image-juliusomo.png",
      webp: "./images/avatars/image-juliusomo.webp",
    },
    username: "juliusomo",
  },
  comments: [
    {
      id: 1,
      content:
        "Impressive! Though it seems the drag feature could be improved. But overall it looks incredible. You've nailed the design and the responsiveness at various breakpoints works really well.",
      createdAt: "1 month ago",
      score: 12,
      user: {
        image: {
          png: "./images/avatars/image-amyrobson.png",
          webp: "./images/avatars/image-amyrobson.webp",
        },
        username: "amyrobson",
      },
      replies: [],
    },
    {
      id: 2,
      content:
        "Woah, your project looks awesome! How long have you been coding for? I'm still new, but think I want to dive into React as well soon. Perhaps you can give me an insight on where I can learn React? Thanks!",
      createdAt: "2 weeks ago",
      score: 5,
      user: {
        image: {
          png: "./images/avatars/image-maxblagun.png",
          webp: "./images/avatars/image-maxblagun.webp",
        },
        username: "maxblagun",
      },
      replies: [
        {
          id: 3,
          content:
            "If you're still new, I'd recommend focusing on the fundamentals of HTML, CSS, and JS before considering React. It's very tempting to jump ahead but lay a solid foundation first.",
          createdAt: "1 week ago",
          score: 4,
          replyingTo: "maxblagun",
          user: {
            image: {
              png: "./images/avatars/image-ramsesmiron.png",
              webp: "./images/avatars/image-ramsesmiron.webp",
            },
            username: "ramsesmiron",
          },
        },
        {
          id: 4,
          content:
            "I couldn't agree more with this. Everything moves so fast and it always seems like everyone knows the newest library/framework. But the fundamentals are what stay constant.",
          createdAt: "2 days ago",
          score: 2,
          replyingTo: "ramsesmiron",
          user: {
            image: {
              png: "./images/avatars/image-juliusomo.png",
              webp: "./images/avatars/image-juliusomo.webp",
            },
            username: "juliusomo",
          },
        },
      ],
    },
  ],
};

export const commentSlice = createSlice({
  name: "comments",
  initialState,
  reducers: {}, //TODO add the reducers
});

export const selectCommentReducer = commentSlice.reducer;
